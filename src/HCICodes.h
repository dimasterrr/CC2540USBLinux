#ifndef HCICODES_H
#define HCICODES_H

enum PKTTYPES {
	COMMAND 	= 0x01,
	ASYNC_DATA 	= 0x02,
	SYNC_DATA	= 0x03,
	EVENT		= 0x04,
};

enum EVTCODES {
    VENDOR_SPECIFIC 	            = 0xFF,
    LOW_ENERGY			            = 0x3E,
	DISCONNECT_COMPLETE             = 0x05,
    ENCRYPTION_CHANGE               = 0x08,
    READ_VERSION_INFO               = 0x0C,
    COMMAND_COMPLETE                = 0x0E,
    COMMAND_STATUS                  = 0x0F,
    HARDWARE_ERROR                  = 0x10,
    NUMBER_OF_COMPLETED_PKG         = 0x13,
    DATA_BUFFER_OVERFLOW            = 0x1A,
    ENCRYPTION_KEY_REFRESH_COMPLETE = 0x30
};

enum SUBEVTCODES {
    LE_CONNECTION_COMPLETE = 0x01,
    LE_ADVERTISING_REPORT,
    LE_CONNECTION_UPDATE_COMPLETE,
    LE_READ_REMOTE_USED_FEATURE_COMPLETE,
    LE_LONG_TERM_KEY_REQUEST
};

enum EOGF {
    EMBEDDED_OPCODE = 0x00,
    CORE_OPCODE,
    PROFILE_REQUEST,
    pROFILE_RESPONSE
};

enum GAPEVTS {
    GAP_DEVICE_INIT_DONE        = 0x00,
    GAP_DEVICE_DISCOVERY,
    GAP_ADVERT_DATA_UPDATE_DONE,
    GAP_MAKE_DISCOVERABLE_DONE,
    GAP_END_DISCOVERABLE_DONE,
    GAP_LINK_ESTABLISHED,
    GAP_LINK_TERMINATED,
    GAP_LINK_PARAMETER_UPDATE,
    GAP_RANDOM_ADDRESS_CHANGED,
    GAP_SIGNATURE_UPDATED,
    GAP_AUTHENTICATION_COMPLETE,
    GAP_PASSKEY_NEEDED,
    GAP_SLAVE_REQUESTED_SECURITY,
    GAP_DEVICE_INFOMATION,
    GAP_BOND_COMPLETE,
    GAP_PAIRING_REQUESTED,
    GAP_COMMAND_STATUS          = 0x7F  
};

enum OGF {
    LINK_CONTROL_COMMANDS   = 0x01,
    LINK_pOLICY_COMMANDS,
    CONTROLLER_AND_BASEBAND_COMMANDS,
    INFOMATIONAL_PARAMETERS,
    STATUS_PARAMETERS,
    TESTING_COMMANDS,
    LE_ONLY_COMMANDS        = 0x08,
    VENDOR_SPECIFIC_COMMAND = 0xFF
};

enum CSG {
    HCI     = 0x00,
    L2CAP,
    ATT,
    GATT,
    GAP,
    UTIL,
    RESERVED,
    USER_PROFILE
};

enum L2CAPCMDS {
    L2CAP_CONNECTION_PARAMETER_UPDATE_REQUEST = 0x92
};

enum ATTCMDS {
    ATT_ERROR_RESPONSE      = 0x01,
    ATT_EXCHANGE_MTU_REQUEST,
    ATT_EXCHANGE_MTU_RESPONSE,
    ATT_FIND_INFOMATION_REQUEST,
    ATT_FIND_INFOMATION_RESPONSE,
    ATT_FIND_BY_TYPE_VALUE_REQUEST,
    ATT_FIND_BY_TYPE_VALUE_RESPONSE,
    ATT_READ_BY_TYPE_REQUEST,
    ATT_READ_BY_TYPE_RESPONSE,
    ATT_READ_REQUEST,
    ATT_READ_RESPONSE,
    ATT_READ_BLOB_REQUEST,
    ATT_READ_BLOB_RESPONSE,
    ATT_READ_MUNTIPLE_REQUEST,
    ATT_READ_MUNTIPLE_RESPONSE,
    ATT_READ_BY_GROUP_TYPE_REQUEST,
    ATT_READ_BY_GROUP_TYPE_RESPONSE,
    ATT_WRITE_REQUEST,
    ATT_WRITE_RESPONSE,
    ATT_PREPARE_WRITE_REQUEST,
    ATT_PREPARE_WRITE_RESPONSE,
    ATT_EXECUTE_WRITE_REQUEST,
    ATT_EXECUTE_WRITE_RESPONSE,
    ATT_HANDLE_VALUE_NOTIFICATION,
    ATT_HANDLE_VALUE_INDICATION,
    ATT_HANDLE_VALUE_CONFIRMATION
};

enum GATTCMDS {
    GATT_DISCOVER_CHARACTERISTICS_BY_UUID = 0x88,
    GATT_WRITE_LONG                       = 0x96
};

enum GAPCMDS {
    GAP_DEVICE_INITIALIZATION       = 0x00,
    GAP_CONFIGURE_DEVICE_ADDRESS    = 0x03,
    GAP_DEVICE_DISCOVERY_REQUEST,
    GAP_DEVICE_DISCOVERY_CANCEL,
    GAP_MAKE_DISCOVERABLE,
    GAP_UPDATE_ADVERTISING_DATA,
    GAP_END_DISCOVERABLE,
    GAP_ESTABLISH_LINK_REQUEST,
    GAP_TERMINATE_LINK_REQUEST,
    GAP_AUTHENTICATE,
    GAP_PASSKEY_UPDATE,
    GAP_SLAVE_SECURITY_REQUEST,
    GAP_SIGNABLE,
    GAP_BOND,
    GAP_TERMINATE_AUTH,
    GAP_UPDATE_LINK_PARAMETER_REQUEST,
    GAP_SET_PARAMETER               = 0x30,
    GAP_GET_PARAMETER,
    GAP_RESOLVE_PRIVATE_ADDRESS,
    GAP_SET_ADVERTISEMENT_TOKEN,
    GAP_REMOVE_ADVERTISEMENT_TOKEN,
    GAP_UPDATE_ADVERTISEMENT_TOKENS,
    GAP_BOND_SET_PARAMETER,
    GAP_BOND_GET_PARAMETER
};

enum GAPROLES {
    BOARDCASTER = 0x01,
    OBSERVER    = 0x02,
    PERIPHERAL  = 0x04,
    CENTRAL     = 0x08
};

enum LECMDS {
    LE_READ_RSSI = 0x05
};

#endif
